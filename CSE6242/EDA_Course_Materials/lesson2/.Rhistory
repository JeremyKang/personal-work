# 1. Run the code below to create the vector 'udacious'.
# You need to highlight all of the lines of the code and then
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
"Kunal Chawla", "Jeremy Kang")
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Jeremy Kang")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
mtcars
head(mtcars, 10)
head(mtcars)
tail(mtcars, 3)
mtcars$mpg
mtcars$cyl
mtcars$hp
mean(mtcars$mpg)
getwd()
statesInfo <- read.csv('stateDate.csv')
setwd('~/Downloads')
statesInfo <- read.csv('stateDate.csv')
setwd('~/Downloads/EDA_Course_Materials/lesson2')
statesInfo <- read.csv('stateDate.csv')
statesInfo <- read.csv('stateData.csv')
statesInfo <- read.csv('stateData.csv')
View(statesInfo)
View(statesInfo)
sybset(statesInfo, state.region == 1)
subset(statesInfo, state.region == 1)
stateSubset subset(statesInfo, state.region == 1)
head(stateSubset, 2)
dim(stateSubset)
stateSubsetBracket <- statesInfo[statesInfo$state.region == 1, ]
head(stateSubsetBracket, 2)
dim(stateSubsetBracket)
stateSubset <- subset(statesInfo, state.region == 1)
head(stateSubset, 2)
dim(stateSubset)
stateSubsetBracket <- statesInfo[statesInfo$state.region == 1, ]
head(stateSubsetBracket, 2)
dim(stateSubsetBracket)
install.packages('knitr', dependencies = T)
install.packages("knitr", dependencies = T)
?cars
str(cars)
plot(cars)
summary(mtcars)
stateSubset
efficient <- subset(mtcars, mpg >= 23)
length(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
?mtcars
row.names <- subset(mtcars, qsec  <= 16.90)
View(row.names)
View(row.names)
View(row.names)
row.names(numberSix)
numberSix <- subset(mtcars, qsec  <= 16.90)
row.names(numberSix)
length(lightCars)
lightCars <- subset(mtcars, wt < 2000)
length(lightCars)
mtcars$year <- 1974
mtcars
e
e
mtcars <- subset(mtcars, select = -year)
mtcars
mtcars$year <- c(1973, 1974)
mtcars
mtcars <- subset(mtcars, select = -year)
mtcars
mtcars$wt
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
rm(row.names)
install.packages('knitr', dependencies = T)
install.packages("knitr", dependencies = T)
library(knitr)
answer <- subset(mtcars, mpg >= 30 | hp < 60)
answer
row.names(answer)
reddit <- read.csv('reddit.csv')
reddit <- read.csv('reddit.csv')
str(data)
str(reddit)
View(reddit)
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
table(reddit$employment.status)
reddit$age.range <- factor(c("Under 18", "18-24", "25-34", "45-54", "53-64", "65 or Above"))
qplot(data = reddit, x = age.range)
qplot(data = reddit, x = age.range)
reddit <- read.csv('reddit.csv')
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
reddit$age.range <- factor(reddit, level = c("Under 18", "18-24", "25-34", "45-54", "53-64", "65 or Above"))
qplot(data = reddit, x = age.range)
reddit <- read.csv('reddit.csv')
table(reddit$employment.status)
summary(reddit)
qplot(data = reddit, x = age.range)
reddit$age.range <- factor(reddit, level = c("Under 18", "18-24", "25-34", "45-54", "53-64", "65 or Above"))
qplot(data = reddit, x = age.range)
reddit <- read.csv('reddit.csv')
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
reddit$age.range <- ordered(reddit$age.range, level = c("Under 18", "18-24", "25-34", "45-54", "53-64", "65 or Above"))
qplot(data = reddit, x = age.range)
d
d
d
reddit <- read.csv('reddit.csv')
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
reddit$age.range <- ordered(reddit$age.range, level = c("Under 18", "18-24", "25-34", "45-54", "53-64", "65 or Above"))
qplot(data = reddit, x = age.range)
x = c(4,3,3,4,3,1)
x
length(x)
y = vector(mode = "logical", length = 4)
y
z = vector(length = 3, mode = "numeric")
z
q = rep(3.2, times = 10)
q
w = seq(0, 1, by =0.1)
w
w = seq(0,1, length.out = 11)
w
w <= 0.5
any(w<=0.5)
WHICH(W<=0.5)
which(w<=0.5)
w[w<=0.5]
subset(w, w<=0.5)
w[w<=0.5]=0
w
z = seq(1,20,length.out=20)
x = array(data=z,dim = c(4,5))
x
Z
z
x[-1,]
y = x[c(1,2), c(1,2)]
y
n1 = 2 * y + 1
n1
n2 = y %*% y
n2
x
x[1,] %*% x[1,]
t(x)
x
t(x)
z = seq(1,20,length.out=20)
x = array(data=z,dim = c(5,4))
x
x = array(data=z,dim = c(4,5))
x
> x = array(data=z,dim = c(4,5))
x
t(x)
x[1,]
t(x)
t(x)
> x = array(data=z,dim = c(4,5))
x = array(data=z,dim = c(4,5))
x
x[1,]
outer(x[,1], x[,1])
x[,1]
x
rbind(x[1,], x[1,])
x
cbind(x[1,], x[1,])
L=list(name = 'John', age = 55, no.children = 2, children.ages = c(15,18))
names(L)
L[[2]]
L$name
L['name']
L['name']
L$children.ages[2]
L[[4]][2]
L[[2]]
R = data.frame(name = vecn, age = veca, salary = vecs)
vecn = c("John Smith", "Jane Doe")
veca = c(42, 45)
vecs = c(50000, 55000)
R = data.frame(name = vecn, age = veca, salary = vecs)
R.describe
R.describe()
summary(R)
data(R)
str(R)
R
names(R) = c("NAME", "AGE", "SALARY")
R
data(iris)
data(iris)
names(iris)
head(iris,4)
iris[1]
iris$Sepal.Length[1:10]
attach(iris, warn.conflicts = FALSE)
summary(iris)
logfact(5)
logfact = function(n) {
if (n == 1) {
return(0)
}
else {
return log(n * logfact(n-1))
logfact = function(n) {
if (n == 1) {
return(0)
} else {
return log(n * logfact(n-1))
}
logfact(5)
logfact = function(n) {
if (n == 1) {
return(0)
} else {
return log(n * logfact(n-1))
}
logfact = function(n) {
if (n == 1) {
return(0)
} else {
return log(n * logfact(n-1))
}
}
logfact = function(n) {
if (n == 1) {
return(0)
} else {
return log(n * logfact(n-1))
log(5)
log(4!)
log(4)
log(4*3*2*1)
log(4) + log(3) + log(2) + log(1)
a = 2*x + y
stopifnot( a == c(8,3,4) )
x = vector(length=3, mode="numeric")
y = c(4,3,3)
a = 2*x + y
stopifnot( a == c(8,3,4) )
a = "a string"
stopifnot(a == "a string");
stopifnot(TRUE || FALSE)
stopifnot(!(TRUE && FALSE))
stopifnot(TRUE || TRUE)
mask = c(TRUE,FALSE,TRUE)
stopifnot( a[mask] == c(7,3) )
indices = c(1,3)
stopifnot( a[indices] == c(7,3))
a = 2*x + y
stopifnot( a[mask] == c(7,3) )
stopifnot( a[mask] == c(7,3) )
indices = c(1,3)
stopifnot( a[indices] == c(7,3))
mask = c(TRUE,TRUE,TRUE)
stopifnot( a[mask] == c(7,3) )
indices = c(1,3)
stopifnot( a[indices] == c(7,3))
b = rep(3.2, times=5)
stopifnot( b == c(3.2, 3.2, 3.2, 3.2, 3.2))
w = seq(0,3)
stopifnot(w == c(0,1,2,3))
x = seq(0,1,by=0.2)
stopifnot( x == c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0))
y = seq(0,1,limit.out=3)
stopifnot( x == c(0.0, 0.5, 1.0) )
z = 1:10
stopifnot(z == seq(1,10,by=1))
sum = 0
for(i in z){
sum = sum + i
}
stopifnot(sum == 55)
x = 1:10
f = function(a){
a[1] = 10
}
f(x)
stopifnot(x == 1:10)
x
a[1] = 10
a
f(x)
stopifnot(x == 1:10)
a = 2*x + y
stopifnot( a == c(8,3,4) )
a
y = c(4,3,3)
y
a = 2*x + y
x = vector(length=3, mode="numeric")
y = c(4,3,3)
a = 2*x + y
a
x = vector(length=3, mode="numeric")
y = c(4,3,3)
stopifnot( x == c(0,0,0))
stopifnot(length(y) == 3)
x[1] = 2
x[3] = 1
stopifnot( x == c(2,0,1) )
a = 2*x + y
print(a)
stopifnot( a == c(8, 3, 5) )
a = a - 1
a
stopifnot( (a>=7) == c(TRUE,FALSE,FALSE))
stopifnot( (a==2) == c(FALSE,TRUE,FALSE))
mask = c(TRUE,FALSE,TRUE)
stopifnot( a[mask] == c(7,3) )
mask
a[mask]
indices = c(1,3)
stopifnot( a[indices] == c(7,3))
a[indices]
x = seq(0,1,by=0.2)
x
xwhy = c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
xwhy
stopifnot( x == c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0))
x == xwhy
x, xwhy
x
xwhy
stopifnot( x == c(0.0, 0.2, 0.4, x[4], 0.8, 1.0))
y = seq(0,1,limit.out=3)
stopifnot( x == c(0.0, 0.5, 1.0) )
y
